#4
male = temp %>%
filter(Gender == 'Male') %>%
summarise(mean(Body.Temp))
female = temp %>%
filter(Gender == 'Female') %>%
summarise(mean(Body.Temp))
View(female)
diff = male - female
View(diff)
diff = female - male
View(diff)
diff = abs(female - male)
#4
male = temp %>%
filter(Gender == 'Male')
female = temp %>%
filter(Gender == 'Female')
t.test(male$Body.Temp, female.Body.Temp, mu = mean(temp$Body.Temp))
female = temp %>%
filter(Gender == 'Female')
#4
male = temp %>%
filter(Gender == 'Male')
t.test(male$Body.Temp, female.Body.Temp, mu = mean(temp$Body.Temp))
View(female)
t.test(male$Body.Temp, female$Body.Temp, mu = mean(temp$Body.Temp))
View(temp)
View(male)
mean(temp$Body.Temp)
t.test(male$Body.Temp, female$Body.Temp, mu = mean(temp$Body.Temp))
t.test(male$Body.Temp, female$Body.Temp, mu = abs(male$Body.Temp - female$Body.Temp))
t.test(male$Body.Temp, female$Body.Temp)
t.test(Temp, mu = 98.6)
t.test(male$Body.Temp, female$Body.Temp)
#5
var.test(male$Heart.Rate, female$Heart.Rate)
library(datasets)
head(datasets)
head(PlantGrowth)
str(PlantGrowth)
#1
ggplot(data = PlantGrowth, aes(x=group, y= weight)) + geom_boxplot(stat='identity')
#1
ggplot(data = PlantGrowth, aes(x=group, y= weight)) + geom_boxplot()
datactrl = PlantGrowth %>%
filter(group == 'ctrl')
datatrt1 = PlantGrowth %>%
filter(group == 'trt1')
datatrt2 = PlantGrowth %>%
filter(group == 'trt2')
bartlett.test(datactrl, datatrt1, datatrt2)
View(datactrl)
bartlett.test(datactrl[1], datatrt1[1], datatrt2[1])
View(datatrt2)
bartlett.test(datactrl$weight, datatrt1$weight, datatrt2$weight)
View(datatrt1)
bartlett.test(datactrl$weight, datatrt1$weight, datatrt2$weight)
#2
bartlett.test(weight~group, PlantGrowth)
ggplot(data=temp, aes(x=Body.Temp, y=Heart.Rate)) + geom_bar(stat='identity')
ggplot(data=temp, aes(x=Body.Temp, y=Heart.Rate)) + geom_bar(aes(fill=Gender))
ggplot(data=temp, aes(x=Body.Temp, y=Heart.Rate)) + geom_bar()
ggplot(data=temp, aes(x=Body.Temp, y=Heart.Rate)) + geom_bar(stat = 'identity')
#2
bartlett.test(list(datactrl$weight, datatrt1$weight, datatrt2$weight))
#3
bartlett.test(weight~group, PlantGrowth)
#2
bartlett.test(list(datactrl$weight, datatrt1$weight, datatrt2$weight))
#2
SD(datactrl$weight)
#2
sd(datactrl$weight)
sd(datatrt2$weight)
#2
summary(aov(weight~group, PlantGrowth))
#5
var.test(male$Heart.Rate, female$Heart.Rate)
#5
var.test(male$Heart.Rate, female$Heart.Rate, alternative = less)
#5
var.test(male$Heart.Rate, female$Heart.Rate, alternative = 'less')
#5
var.test(male$Heart.Rate, female$Heart.Rate, alternative = 'less')
#1
mosaicplot(HairEyeColor, shade = TRUE)
#2
summary(aov(weight~group, PlantGrowth))
HairEyeColor
class(HairEyeColor)
as.data.frame(HairEyeColor)
test = as.data.frame(HairEyeColor)
mosaicplot(test, shade = TRUE)
#2
ladies = HairEyeColor[, 1:2, 2]
ladies
HairEyeColor
mosaicplot(ladies)
var.test(ladies$Hair, ladies$Eye)
mosaicplot(ladies)
as.data.frame(ladies)
var.test(ladies$Hair, ladies$Eye)
var.test(Hair, Eye)
ladies %>%
var.test(Hair, Eye)
ladies %>%
var.test(Hair, Eye)
chisq.test(ladies$hair, ladies$eye)
chisq.test(HairEyeColor$Sex, HairEyeColor$Eye, correct=FALSE)
chisq.test(HairEyeColor$Sex, HairEyeColor$Eye, correct=FALSE)
chisq.test(ladies)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers') %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator'),
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers') %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator'),
)
)
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
library(shiny)
library(leaflet)
library(maps)
library(shinydashboard)
library(DT)
library(dplyr)
library(plotly)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers') %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator'),
)
)
worldks = select(ks2, countryname, countrycode, backers) %>%
group_by(countryname, countrycode) %>%
summarise(backers=sum(backers))
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers') %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator'),
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers') %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers',
color = colorQuantile("RdYlBu", countries$gdp_md_est, n = 5) ) %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers',
color = colorQuantile("RdYlBu", countries$gdp_md_est, n = 5) ) %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers',
color = colorQuantile("RdYlBu", worldks$gbackers, n = 5) ) %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers',
color = colorQuantile("RdYlBu", worldks$backers, n = 5) ) %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers',
color = colorQuantile("RdYlBu", worldks$backers, n = 22) ) %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers',
color = colorQuantile("RdYlBu", worldks$backers, n = 5) ) %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_ly(CategoryData(), x = ~log10(goal), y = ~log10(usdpledged),
text = ~paste('Name:', name, '<br> Goal:', goal, '<br> Raised (USD):', pledged),
color = ~CategoryData()[[2]], type = 'scatter', mode = 'markers',
marker = list(size = ~ log(percentage,base = exp(0.25)), opacity = 0.5)) %>%
layout(title = 'Success on Success',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers',
color = ~colorQuantile("RdYlBu", worldks$backers, n = 5)(backers) ) %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers',
color = ~colorQuantile("RdYlBu", worldks$backers, n = 8)(backers) ) %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers') %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
View(worldks)
worldks = select(ks2, countryname, countrycode, backers) %>%
group_by(countryname, countrycode) %>%
summarise(backers=sum(backers)) %>%
filter(countrycode != 'USA' )
View(worldks)
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers') %>%
layout(
title = 'Countries of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
runApp('C:/Users/Bill Wang/Desktop/shiny_app')
setwd("C:/Users/Bill Wang/Desktop/shiny_app")
ks2 = mutate(ks, countrycode = ifelse(countryname == 'Australia', 'AUS',
ifelse(countryname == 'Austria', 'AUT',
ifelse(countryname == 'Belgium', 'BEL',
ifelse(countryname == "Canada", 'CAN',
ifelse(countryname == 'Denmark', 'DNK',
ifelse(countryname == 'France', 'FRA',
ifelse(countryname == 'Germany', 'DEU',
ifelse(countryname == 'Great Britain', 'GBR',
ifelse(countryname == 'Hong Kong', 'HGK',
ifelse(countryname == 'Ireland', 'IRL',
ifelse(countryname == 'Italy', 'ITA',
ifelse(countryname == 'Japan', 'JPN',
ifelse(countryname == 'Luxembourg', 'LUX',
ifelse(countryname == 'Mexico', 'MEX',
ifelse(countryname == 'Netherlands', 'NLD',
ifelse(countryname == 'New Zealand', 'NZL',
ifelse(countryname == 'Norway', 'NOR',
ifelse(countryname == 'Singapore', 'SGP',
ifelse(countryname == 'Spain', 'ESP',
ifelse(countryname == 'Sweden', 'SWE',
ifelse(countryname == 'Switzerland', 'CHE',
ifelse(countryname == 'United States', 'USA', 'WRONG')
)))))))))))))))))
)))
))
View(ks2)
write.csv(ks, file = 'kickstarter3.csv')
write.csv(ks2, file = 'kickstarter4.csv')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(ks)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
testtime = ks %>%
select(launched, deadline)
View(testtime)
times = ks %>%
select(launched, deadline)
testtime = head(test)
testtime = head(times)
year(testtime$launched)
#Formatting for everything
year(ks$launched)
#Formatting for everything
unique(year(ks$launched))
library(lubridate)
weekday = unique(wday(ks$deadline))
weekday = unique(wday(ks$deadline), label = TRUE)
weekday = unique(wday(ks$deadline), label = TRUE)
unique(wday(ks$deadline), label = TRUE)
unique(wday(ks$deadline, label = TRUE))
weekday = unique(wday(ks$deadline, label = TRUE))
runApp()
runApp()
plot_geo(worldks) %>%
add_trace(
z = ~backers, color = ~backers, colors = 'Blues',
text = ~countryname, locations = ~countrycode,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '# of Backers') %>%
layout(
title = 'International Coverage of Kickstarter',
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')
)
)
View(ks)
runApp()
ks %>%
mutate(year = year(ks$deadline))
test = ks %>%
mutate(year = year(ks$deadline))
test = ks %>%
mutate(year = year(ks$deadline),
month = month(ks$deadline),
weekday = wday(ks$deadline, label = TRUE),
hour = hour(ks$deadline)
)
setwd("C:/Users/Bill Wang/Desktop/shiny_app")
write.csv(ks, file = 'kickstarter5.csv')
ks <- fread(file = "./kickstarter5.csv", drop = 1)
write.csv(test, file = 'kickstarter5.csv')
ks <- fread(file = "./kickstarter5.csv", drop = 1)
View(test)
ks %>%
group_by(year) %>%
summarise(Success = state == "successful"/n() )
ks %>%
group_by(year) %>%
summarise(Success = sum(state == "successful")/n(state))
ks %>%
group_by(year) %>%
summarise(Success = sum(state == "successful")/n())
ks %>%
group_by(month) %>%
summarise(Success = sum(state == "successful")/n())
ks %>%
filter(year == '2018')
ks = ks %>%
filter(year == '2018')
ks = ks %>%
filter(year != '2018')
ks <- fread(file = "./kickstarter5.csv", drop = 1)
ks = ks %>%
filter(year != '2018')
#
write.csv(test, file = 'kickstarter6.csv')
ks <- fread(file = "./kickstarter6.csv", drop = 1)
#
write.csv(ks, file = 'kickstarter6.csv')
ks <- fread(file = "./kickstarter6.csv", drop = 1)
ks = ks %>%
filter(year != '2018')
#
write.csv(ks, file = 'kickstarter6.csv')
ks <- fread(file = "./kickstarter6.csv", drop = 1)
runApp()
runApp()
ks %>%
group_by(input$changes) %>% #GROUP BY WILL BE REACTIVE
summarise(Success = round(sum(state == "successful")/n(), digits = 2))
ks %>%
group_by(input$changes) %>% #GROUP BY WILL BE REACTIVE
summarise(Success = round(sum(state == "successful")/n(), digits = 2))
